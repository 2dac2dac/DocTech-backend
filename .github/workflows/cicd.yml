name: Java CI with Gradle

on:
  push:
    branches: [ develop ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # (1) 기본 체크아웃
      - name: checkout
        uses: actions/checkout@v3

      # (2) JDK 17 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # (3) Application.yml 파일 세팅
      - name: Make application.yml
        run: |
          mkdir ./src/main/resources
          cd ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.APPLICATION }}" > ./application.yml
        shell: bash

      # (4) gradlew 파일 실행 권한 설정
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      # (5) Gradle build (Test 제외)
      - name: Build with Gradle
        uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
        with:
          arguments: clean build -x test

      # (6) Docker build & push
      - name: Docker build & Push
        run: |
          docker login -u ${{ secrets.DOCKER_ID }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_ID }}/doctech .
          docker push ${{ secrets.DOCKER_ID }}/doctech

      # (7) Deploy Images with Docker compose
      - name: Deploy Images with Docker compose
        uses: appleboy/ssh-action@master
        env:
          APP: "jyjyjy25"
          COMPOSE: "/home/jyjyjy25/docker-compose.yml"
        with:
          host: ${{ secrets.REMOTE_SSH_HOST }}
          port: ${{ secrets.REMOTE_SSH_PORT }}
          username: ${{ secrets.REMOTE_SSH_ID }}
          password: ${{ secrets.REMOTE_SSH_PASSWD }}
          envs: APP, COMPOSE
          script_stop: true
          script: |
            sudo docker-compose -f $COMPOSE down
            sudo docker pull ${{ secrets.DOCKER_ID }}/doctech
            sudo docker-compose -f $COMPOSE up -d